<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <log4net>
    <!--错误日志类-->
    <logger name="logerror">
      <!--日志类的名字-->
      <level value="ALL" />
      <!--定义记录的日志级别-->
      <appender-ref ref="ErrorAppender" />
      <!--记录到哪个介质中去-->
    </logger>
    <!--信息日志类-->
    <logger name="loginfo">
      <level value="ALL" />
      <appender-ref ref="InfoAppender" />
    </logger>
    <!--错误日志附加介质-->
    <appender name="ErrorAppender" type="log4net.Appender.RollingFileAppender">
      <!-- name属性指定其名称,type则是log4net.Appender命名空间的一个类的名称,意思是,指定使用哪种介质-->
      <param name="File" value="Logs\\" />
      <!--日志输出到exe程序这个相对目录下-->
      <param name="AppendToFile" value="true" />
      <!--输出的日志不会覆盖以前的信息-->
      <param name="MaxSizeRollBackups" value="100" />
      <!--备份文件的个数-->
      <param name="MaxFileSize" value="10240" />
      <!--当个日志文件的最大大小-->
      <param name="StaticLogFileName" value="false" />
      <!--是否使用静态文件名-->
      <param name="DatePattern" value="&quot;error_&quot;yyyyMMdd&quot;.log&quot;" />
      <!--日志文件名-->
      <param name="RollingStyle" value="Date" />
      <!--文件创建的方式，这里是以Date方式创建-->
      <!--错误日志布局-->
      <layout type="log4net.Layout.PatternLayout">
        <param name="ConversionPattern" value="异常时间：%d [%t] 异 常：%m %n"  />
      </layout>
    </appender>
    <!--信息日志附加介质-->
    <appender name="InfoAppender" type="log4net.Appender.RollingFileAppender">
      <param name="File" value="Logs\\" />
      <param name="AppendToFile" value="true" />
      <param name="MaxFileSize" value="10240" />
      <param name="MaxSizeRollBackups" value="100" />
      <param name="StaticLogFileName" value="false" />
      <param name="DatePattern" value="&quot;info_&quot;yyyyMMdd&quot;.log&quot;" />
      <param name="RollingStyle" value="Date" />
      <!--信息日志布局-->
      <layout type="log4net.Layout.PatternLayout">
        <param name="ConversionPattern" value="日志时间：%d [%t]%n日 志 类：%m %n"  />
      </layout>
    </appender>
    <!-- 输出样式：
      %m(message):输出的日志消息，如ILog.Debug(…)输出的一条消息 
      %n(new line):换行 
      %d(datetime):输出当前语句运行的时刻 
      %r(run time):输出程序从运行到执行到当前语句时消耗的毫秒数 
      %t(thread id):当前语句所在的线程ID 
      %p(priority): 日志的当前优先级别，即DEBUG、INFO、WARN…等 
      %c(class):当前日志对象的名称，例如： 
      %f(file):输出语句所在的文件名。 
      %l(line)：输出语句所在的行号。 
      %数字：表示该项的最小长度，如果不够，则用空格填充，如“%-5level”表示level的最小宽度是5个字符，如果实际长度不够5个字符则以空格填充。
      通过这些东西，你可以任意组合你喜欢的输出格式内容。
      -->
  </log4net>
</configuration>